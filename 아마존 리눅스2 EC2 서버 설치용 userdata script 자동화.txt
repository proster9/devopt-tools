###############################################################################################################################
### EC2 Instance UserData 3Teir 환경 설치 자동화 
### Script 맨 위 라인에 #!/bin/sh 부터 시작을 지정해야 인스턴스 생성시 설치가 진행된다.
### 최종적으로 nginx.conf 의 proxy_pass ALB 서버 실제 주소 적용, 톰켓 server.xml 의 서비스 포트(8081, 8082, 9000 등) 설정 적용
### 톰켓 WAS 서버의 DB 접속 테스트용 JSP 페이지의 Url, Id, Pass 분분 실제 DB 접속 정보로 변경하고 테스트하면 된다.
###############################################################################################################################

### WEB) [수동/편집] nginx conf  vi /etc/nginx/nginx.conf (WAS ALB proxy pass SET)
cd /etc/nginx
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8081/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8081/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8082/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8082/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:9000/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:9000/g' nginx.conf

vi /etc/nginx/nginx.conf
### http: ==> 밑에 large_client_header_buffers 4 16k; 넣어준다

sudo su
### nginx 가동/status
sudo service nginx start
sudo systemctl status nginx

sudo su
### nginx 중지/status
sudo service nginx stop
sudo systemctl status nginx


### WAS) [수동/편집] 스크립트 적용시 실제 가동 DB 인스턴스의 ARN과 Name 으로 변경하여 적용이 필요함.
cd /devopt-tools
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was2.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was2.jsp

cd /usr/local/tomcat-9.0/webapps/ROOT
vi test-mysql-was1.jsp
awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com

sudo su
### /etc/profile export do
source /etc/profile

### 환경변수 설정 확인
echo $JAVA_HOME
echo $JDK_HOME
echo $CATALINA_HOME
echo $CLASSPATH
echo $PATH

sudo su
### 톰캣 시작
sudo /usr/local/tomcat-9.0/bin/startup.sh
sleep 5s
ps -ef | grep tomcat 
netstat -tln

### 톰캣 종료
sudo /usr/local/tomcat-9.0/bin/shutdown.sh
sleep 5s
ps -ef | grep tomcat 
netstat -tln

### tomcat catalina.out 로그 보기
cd /usr/local/tomcat-9.0/logs
tail -f catalina.out 

root@biotree bin]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost6 localhost6.localdomain6

cd /usr/share/nginx/html
vi /usr/share/nginx/html/index.html

<p>### NGINX WEB 서버 1번 설치 UserData Scripts</p>
<p>### NGINX WEB 서버 2번 설치 UserData Scripts</p>

<%@ page import="java.net.*" %>

InetAddress addr = InetAddress.getLocalHost();
String strIP = addr.getHostAddress();
String strHostName = addr.getHostName();

out.println("IP : " + strIP + "<br>");
out.println("HOST : " + strHostName + "<br>");

sudo su
vi /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was1.jsp
vi /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was1.jsp

workshop-db-cluster-instance-1.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com
workshop-db-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com
workshop-db-cluster.cluster-ro-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com

workshop-db-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com
Caused by: java.net.UnknownHostException: workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com: Name or service not known
java.sql.SQLSyntaxErrorException: Unknown database 'workshop'

###############################################################################################################################


#********************************************************************************************************************************************************************************************#
# AWS EC2 Instance Creating by UserData (WEB/WAS Server in Cloud Subnet with Application Load Balancer)
# starting with #!/bin/sh command first.
#********************************************************************************************************************************************************************************************#


#!/bin/sh
### NGINX WEB 서버 1번 설치 UserData Scripts
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-web1

### vi /etc/hosts
cd /etc 
sed -i 's/localhost4.localdomain4/localhost4.localdomain4 biotree-web1/g' hosts

cd /usr/bin
### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

### nginx WEB install
amazon-linux-extras install -y nginx1

### nginx conf copy
### \cp -f ./devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf
\cp -f /usr/bin/devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf

### nginx conf  vi /etc/nginx/nginx.conf (WAS ALB proxy pass SET)
cd /etc/nginx
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8081/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8081/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8082/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8082/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:9000/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:9000/g' nginx.conf

### System Reboot
reboot



#!/bin/sh
### NGINX WEB 서버 2번 설치 UserData Scripts
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-web2

### vi /etc/hosts
cd /etc 
sed -i 's/localhost4.localdomain4/localhost4.localdomain4 biotree-web2/g' hosts

cd /usr/bin
### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

### nginx WEB install
amazon-linux-extras install -y nginx1

### nginx conf copy
### \cp -f ./devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf
\cp -f /usr/bin/devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf

### nginx conf  vi /etc/nginx/nginx.conf (WAS ALB proxy pass SET)
cd /etc/nginx
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8081/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8081/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8082/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8082/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:9000/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:9000/g' nginx.conf

### System Reboot
reboot




#!/bin/sh
### TOMCAT9 WAS 서버 1번 설치 UserData Scripts
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-was1

### vi /etc/hosts
cd /etc 
sed -i 's/localhost4.localdomain4/localhost4.localdomain4 biotree-was1/g' hosts

cd /usr/bin
### open JAVA 8 install
yum install -y java-1.8.0-openjdk-devel.x86_64

### Tomcat 9 setup
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz
tar xvfz apache-tomcat-9.0.62.tar.gz
mv apache-tomcat-9.0.62 /usr/local/tomcat-9.0

### MySQL Connector 8 import
wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar
mv mysql-connector-java-8.0.29.jar /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64/jre/lib/ext/mysql-connector-java-8.0.29.jar

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

cd /usr/bin/devopt-tools
### 스크립트 적용시 { DB } 를 실제 DB 인스턴스의 ARN과 Name 으로 변경 적용 필요
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was2.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was2.jsp

\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was1.jsp
\cp -f test-mysql-was2.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was2.jsp
\cp -f test-aurora-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was1.jsp
\cp -f test-aurora-mysql-was2.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was2.jsp

cd /etc
echo "export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64" >> profile
echo "export JDK_HOME=\$JAVA_HOME" >> profile
echo "export CATALINA_HOME=/usr/local/tomcat-9.0" >> profile
echo "export CLASSPATH=.:\$JAVA_HOME/jre/lib/ext:\$JAVA_HOME/lib/tools.jar:\$CATALINA_HOME/lib/jsp-api.jar:\$CATALINA_HOME/lib/servlet-api.jar" >> profile
echo "export PATH=\$PATH:\$JAVA_HOME/bin:\$CATALINA_HOME/bin:\$CATALINA_HOME/lib" >> profile

### /etc/profile export do
source /etc/profile

### Tomcat vi /usr/local/tomcat-9.0/conf/server.xml (service port, URIencoding=UTF)
cd /usr/local/tomcat-9.0/conf
sed -i 's/<Connector port="8080" protocol="HTTP\/1.1"/<Connector port="8081" protocol="HTTP\/1.1" URIEncoding="UTF-8" /g' server.xml

### System Reboot
reboot




#!/bin/sh
### TOMCAT9 WAS 서버 2번 설치 UserData Scripts
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-was2

### vi /etc/hosts
cd /etc 
sed -i 's/localhost4.localdomain4/localhost4.localdomain4 biotree-was2/g' hosts

cd /usr/bin
### open JAVA 8 install
yum install -y java-1.8.0-openjdk-devel.x86_64

### Tomcat 9 setup
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz
tar xvfz apache-tomcat-9.0.62.tar.gz
mv apache-tomcat-9.0.62 /usr/local/tomcat-9.0

### MySQL Connector 8 import
wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar
mv mysql-connector-java-8.0.29.jar /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64/jre/lib/ext/mysql-connector-java-8.0.29.jar

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

cd /usr/bin/devopt-tools
### 스크립트 적용시 { DB } 를 실제 DB 인스턴스의 ARN과 Name 으로 변경 적용 필요
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was2.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop/g' test-aurora-mysql-was2.jsp

\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was1.jsp
\cp -f test-mysql-was2.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was2.jsp
\cp -f test-aurora-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was1.jsp
\cp -f test-aurora-mysql-was2.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was2.jsp

cd /etc
echo "export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64" >> profile
echo "export JDK_HOME=\$JAVA_HOME" >> profile
echo "export CATALINA_HOME=/usr/local/tomcat-9.0" >> profile
echo "export CLASSPATH=.:\$JAVA_HOME/jre/lib/ext:\$JAVA_HOME/lib/tools.jar:\$CATALINA_HOME/lib/jsp-api.jar:\$CATALINA_HOME/lib/servlet-api.jar" >> profile
echo "export PATH=\$PATH:\$JAVA_HOME/bin:\$CATALINA_HOME/bin:\$CATALINA_HOME/lib" >> profile

### /etc/profile export do
source /etc/profile

### Tomcat vi /usr/local/tomcat-9.0/conf/server.xml (service port, URIencoding=UTF)
cd /usr/local/tomcat-9.0/conf
sed -i 's/<Connector port="8080" protocol="HTTP\/1.1"/<Connector port="8081" protocol="HTTP\/1.1" URIEncoding="UTF-8" /g' server.xml

### System Reboot
reboot





###############################################################################################################################
### [참고사항] 예제
###############################################################################################################################

#!/bin/sh
### 1번 WEB 서버 설치
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-web1

### vi /etc/hosts
cat <<EOF>hosts-list
127.0.0.1   biotree-web1
::1         localhost6 localhost6.localdomain6
EOF
\cp hosts-list /etc/hosts

### nginx WEB install
amazon-linux-extras install -y nginx1

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

### nginx conf copy
### \cp -f ./devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf
\cp -f /usr/bin/devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf

### nginx conf  vi /etc/nginx/nginx.conf (WAS ALB proxy pass SET)
cd /etc/nginx
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8081/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8081/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8082/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8082/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:9000/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:9000/g' nginx.conf

### System Reboot
reboot



#!/bin/sh
### 2번 WEB 서버 설치
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-web2

### vi /etc/hosts
cat <<EOF>hosts-list
127.0.0.1   biotree-web2
::1         localhost6 localhost6.localdomain6
EOF
\cp hosts-list /etc/hosts

### nginx WEB install
amazon-linux-extras install -y nginx1

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

### nginx conf copy
### \cp -f ./devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf
\cp -f /usr/bin/devopt-tools/web-was-tier-nginx.conf /etc/nginx/nginx.conf

### nginx conf  vi /etc/nginx/nginx.conf (WAS ALB proxy pass SET)
cd /etc/nginx
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8081/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8081/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:8082/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:8082/g' nginx.conf
sed -i 's/internal-WAS-LB-Server-702303987.ap-southeast-1.elb.amazonaws.com:9000/internal-was-ALB-1526305782.ap-southeast-1.elb.amazonaws.com:9000/g' nginx.conf

### System Reboot
reboot




#!/bin/sh
### 1번 WAS 서버 설치
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-was1

### 
cat <<EOF>hosts-list
127.0.0.1   biotree-was1
::1         localhost6 localhost6.localdomain6
EOF
\cp hosts-list /etc/hosts

### open JAVA 8 install
yum install -y java-1.8.0-openjdk-devel.x86_64

### Tomcat 9 setup
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz
tar xvfz apache-tomcat-9.0.62.tar.gz
mv apache-tomcat-9.0.62 /usr/local/tomcat-9.0

### MySQL Connector 8 import
wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar
mv mysql-connector-java-8.0.29.jar /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64/jre/lib/ext/mysql-connector-java-8.0.29.jar

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

cd /devopt-tools
### 스크립트 적용시 실제 가동 DB 인스턴스의 ARN과 Name 으로 변경하여 적용이 필요함.
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday/g' test-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday}/g' test-mysql-was2.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop}/g' test-aurora-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop}/g' test-aurora-mysql-was2.jsp

\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was1.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was2.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was1.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was2.jsp

cd /etc
echo "export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64" >> profile
echo "export JDK_HOME=\$JAVA_HOME" >> profile
echo "export CATALINA_HOME=/usr/local/tomcat-9.0" >> profile
echo "export CLASSPATH=.:\$JAVA_HOME/jre/lib/ext:\$JAVA_HOME/lib/tools.jar:\$CATALINA_HOME/lib/jsp-api.jar:\$CATALINA_HOME/lib/servlet-api.jar" >> profile
echo "export PATH=\$PATH:\$JAVA_HOME/bin:\$CATALINA_HOME/bin:\$CATALINA_HOME/lib" >> profile

### /etc/profile export do
source /etc/profile

### Tomcat vi /usr/local/tomcat-9.0/conf/server.xml (service port, URIencoding=UTF)
cd /usr/local/tomcat-9.0/conf
sed -i 's/<Connector port="8080" protocol="HTTP\/1.1"/<Connector port="8081" protocol="HTTP\/1.1" URIEncoding="UTF-8" /g' server.xml

### System Reboot
reboot




#!/bin/sh
### 2번 WAS 서버 설치
yum update -y

### set TimeZone
rm -f /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

### set-hostname
hostnamectl set-hostname biotree-was2

### 
cat <<EOF>hosts-list
127.0.0.1   biotree-was2
::1         localhost6 localhost6.localdomain6
EOF
\cp hosts-list /etc/hosts

### open JAVA 8 install
yum install -y java-1.8.0-openjdk-devel.x86_64

### Tomcat 9 setup
wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.62/bin/apache-tomcat-9.0.62.tar.gz
tar xvfz apache-tomcat-9.0.62.tar.gz
mv apache-tomcat-9.0.62 /usr/local/tomcat-9.0

### MySQL Connector 8 import
wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.29/mysql-connector-java-8.0.29.jar
mv mysql-connector-java-8.0.29.jar /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64/jre/lib/ext/mysql-connector-java-8.0.29.jar

### GIT Install
yum install -y git
git clone https://github.com/proster9/devopt-tools.git

cd /devopt-tools
### 스크립트 적용시 { DB } 를 실제 DB 인스턴스의 ARN과 Name 으로 변경 적용 필요
sed -i 's/Database-ARN:3306\/Database-Name/{awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday}/g' test-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/{awsdb.cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/immersionday}/g' test-mysql-was2.jsp
sed -i 's/Database-ARN:3306\/Database-Name/{workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop}/g' test-aurora-mysql-was1.jsp
sed -i 's/Database-ARN:3306\/Database-Name/{workshop-db-cluster-cluster.cluster-cw6s6fkyk1d3.ap-southeast-1.rds.amazonaws.com:3306\/workshop}/g' test-aurora-mysql-was2.jsp

\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was1.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-mysql-was2.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was1.jsp
\cp -f test-mysql-was1.jsp /usr/local/tomcat-9.0/webapps/ROOT/test-aurora-mysql-was2.jsp

cd /etc
echo "export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64" >> profile
echo "export JDK_HOME=\$JAVA_HOME" >> profile
echo "export CATALINA_HOME=/usr/local/tomcat-9.0" >> profile
echo "export CLASSPATH=.:\$JAVA_HOME/jre/lib/ext:\$JAVA_HOME/lib/tools.jar:\$CATALINA_HOME/lib/jsp-api.jar:\$CATALINA_HOME/lib/servlet-api.jar" >> profile
echo "export PATH=\$PATH:\$JAVA_HOME/bin:\$CATALINA_HOME/bin:\$CATALINA_HOME/lib" >> profile

### /etc/profile export do
source /etc/profile

### Tomcat vi /usr/local/tomcat-9.0/conf/server.xml (service port, URIencoding=UTF)
cd /usr/local/tomcat-9.0/conf
sed -i 's/<Connector port="8080" protocol="HTTP\/1.1"/<Connector port="8081" protocol="HTTP\/1.1" URIEncoding="UTF-8" /g' server.xml

### System Reboot
reboot
